#+TITLE: search_benchmark valgrind tests
#+TESTY: ECHOING="both"
#+TESTY: PROMPT="@>"
#+TESTY: USE_VALGRIND='1'
# UPDATED Thu Apr  7 02:02:20 PM CDT 2022 to fix timing in final test
* search_benchmark all
Checks if running search_benchmark with no options leads to any
valgrind errors.

#+TESTY: program='./search_benchmark 8 11 1'
#+TESTY: skipdiff=1

#+BEGIN_SRC sh

#+END_SRC

* search_benchmark la
Checks running search_benchmark with option 'la'

#+TESTY: program='./search_benchmark 1 7 5 la'
#+TESTY: skipdiff=1

#+BEGIN_SRC sh

#+END_SRC

* search_benchmark la ba bt
Checks running search_benchmark with options for 3 algorithms.

#+TESTY: program='./search_benchmark 2 9 3 la ba bt'
#+TESTY: skipdiff=1

#+BEGIN_SRC sh

#+END_SRC


* search_benchmark bt ll ba
Checks running search_benchmark with options 3 algorithms in a
different order.

#+TESTY: program='./search_benchmark 1 8 4 bt ll ba'
#+TESTY: skipdiff=1

#+BEGIN_SRC sh

#+END_SRC


# * search_benchmark ba ll bt la
# Checks running search_benchmark with options for all algorithms but in
# a different order.

# #+TESTY: program='./search_benchmark 1 10 1 ba ll bt la'
# #+TESTY: skipdiff=1

# #+BEGIN_SRC sh

# #+END_SRC

* search_benchmark ll time check
Checks running search_benchmark with options 3 algorithms in a
different order.

#+TESTY: program='bash -v'
#+TESTY: prompt=">>"
#+TESTY: echoing="input"
#+TESTY: use_valgrind=0

#+BEGIN_SRC sh
>> output=$(./search_benchmark 10 10 150 ll)
>> runtime=$(echo $output | awk '{if($NF<1.0){print $NF}}')
>> msg=""
>> msg+="Linked list run should take > 1.0 seconds\n"
>> msg+="Took %s seconds\n"
>> msg+="Check program logic\n"
>> if [[ "$runtime" != "" ]]; then printf "$msg" "$runtime"; fi
#+END_SRC
